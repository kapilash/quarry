/* this is generated code */
#include <map>
#include <string>


namespace Quarry{
    void collectCKeywords(std::map<std::string,int> &kwmap) {
        kwmap["_Bool"] = 0;
        kwmap["_Complex"] = 1;
        kwmap["_Imaginary"] = 2;
        kwmap["auto"] = 3;
        kwmap["break"] = 4;
        kwmap["case"] = 5;
        kwmap["char"] = 6;
        kwmap["const"] = 7;
        kwmap["continue"] = 8;
        kwmap["default"] = 9;
        kwmap["do"] = 10;
        kwmap["double"] = 11;
        kwmap["else"] = 12;
        kwmap["enum"] = 13;
        kwmap["extern"] = 14;
        kwmap["float"] = 15;
        kwmap["for"] = 16;
        kwmap["goto"] = 17;
        kwmap["if"] = 18;
        kwmap["inline"] = 19;
        kwmap["int"] = 20;
        kwmap["long"] = 21;
        kwmap["register"] = 22;
        kwmap["restrict"] = 23;
        kwmap["return"] = 24;
        kwmap["short"] = 25;
        kwmap["signed"] = 26;
        kwmap["sizeof"] = 27;
        kwmap["static"] = 28;
        kwmap["struct"] = 29;
        kwmap["switch"] = 30;
        kwmap["typedef"] = 31;
        kwmap["union"] = 32;
        kwmap["unsigned"] = 33;
        kwmap["void"] = 34;
        kwmap["volatile"] = 35;
        kwmap["while"] = 36;
    }
    void collectCOperators(std::map<std::string,int> &kwmap) {
        kwmap["!"] = 0;
        kwmap["!="] = 1;
        kwmap["%"] = 2;
        kwmap["%="] = 3;
        kwmap["&"] = 4;
        kwmap["&&"] = 5;
        kwmap["&="] = 6;
        kwmap["*"] = 7;
        kwmap["*="] = 8;
        kwmap["+"] = 9;
        kwmap["++"] = 10;
        kwmap["+="] = 11;
        kwmap["-"] = 12;
        kwmap["--"] = 13;
        kwmap["-="] = 14;
        kwmap["->"] = 15;
        kwmap["."] = 16;
        kwmap["/"] = 17;
        kwmap["/="] = 18;
        kwmap["<"] = 19;
        kwmap["<<"] = 20;
        kwmap["<<="] = 21;
        kwmap["<="] = 22;
        kwmap["="] = 23;
        kwmap["=="] = 24;
        kwmap[">"] = 25;
        kwmap[">="] = 26;
        kwmap[">>"] = 27;
        kwmap[">>="] = 28;
        kwmap["?"] = 29;
        kwmap["^"] = 30;
        kwmap["^="] = 31;
        kwmap["|"] = 32;
        kwmap["|="] = 33;
        kwmap["||"] = 34;
        kwmap["~"] = 35;
    }
    void collectJavaKeywords(std::map<std::string,int> &kwmap) {
        kwmap["abstract"] = 0;
        kwmap["assert"] = 1;
        kwmap["boolean"] = 2;
        kwmap["break"] = 3;
        kwmap["byte"] = 4;
        kwmap["case"] = 5;
        kwmap["catch"] = 6;
        kwmap["char"] = 7;
        kwmap["class"] = 8;
        kwmap["const"] = 9;
        kwmap["continue"] = 10;
        kwmap["default"] = 11;
        kwmap["do"] = 12;
        kwmap["double"] = 13;
        kwmap["else"] = 14;
        kwmap["enum"] = 15;
        kwmap["extends"] = 16;
        kwmap["final"] = 17;
        kwmap["finally"] = 18;
        kwmap["float"] = 19;
        kwmap["for"] = 20;
        kwmap["goto"] = 21;
        kwmap["if"] = 22;
        kwmap["implements"] = 23;
        kwmap["import"] = 24;
        kwmap["instanceof"] = 25;
        kwmap["int"] = 26;
        kwmap["interface"] = 27;
        kwmap["long"] = 28;
        kwmap["native"] = 29;
        kwmap["new"] = 30;
        kwmap["package"] = 31;
        kwmap["private"] = 32;
        kwmap["protected"] = 33;
        kwmap["public"] = 34;
        kwmap["return"] = 35;
        kwmap["short"] = 36;
        kwmap["static"] = 37;
        kwmap["strictfp"] = 38;
        kwmap["super"] = 39;
        kwmap["switch"] = 40;
        kwmap["synchronized"] = 41;
        kwmap["this"] = 42;
        kwmap["throw"] = 43;
        kwmap["throws"] = 44;
        kwmap["transient"] = 45;
        kwmap["try"] = 46;
        kwmap["void"] = 47;
        kwmap["volatile"] = 48;
        kwmap["while"] = 49;
    }
    void collectJavaOperators(std::map<std::string,int> &kwmap) {
        kwmap["!"] = 0;
        kwmap["!="] = 1;
        kwmap["%"] = 2;
        kwmap["%="] = 3;
        kwmap["&"] = 4;
        kwmap["&&"] = 5;
        kwmap["&="] = 6;
        kwmap["*"] = 7;
        kwmap["*="] = 8;
        kwmap["+"] = 9;
        kwmap["++"] = 10;
        kwmap["+="] = 11;
        kwmap["-"] = 12;
        kwmap["--"] = 13;
        kwmap["-="] = 14;
        kwmap["/"] = 15;
        kwmap["/="] = 16;
        kwmap[":"] = 17;
        kwmap["<"] = 18;
        kwmap["<<"] = 19;
        kwmap["<<="] = 20;
        kwmap["<="] = 21;
        kwmap["="] = 22;
        kwmap["=="] = 23;
        kwmap[">"] = 24;
        kwmap[">="] = 25;
        kwmap[">>"] = 26;
        kwmap[">>="] = 27;
        kwmap[">>>"] = 28;
        kwmap[">>>="] = 29;
        kwmap["?"] = 30;
        kwmap["^"] = 31;
        kwmap["^="] = 32;
        kwmap["|"] = 33;
        kwmap["|="] = 34;
        kwmap["||"] = 35;
        kwmap["~"] = 36;
    }
}
